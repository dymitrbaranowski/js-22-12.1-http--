{"mappings":"AAAA,MAAMA,EAAS,CACb,cACA,UACA,kBACA,aACA,cAGF,IAAIC,EAAc,EAElB,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,kBACjCC,YAAaF,SAASC,cAAc,cACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,8BA4BpC,SAASI,EAAkBC,GACzBR,EAAKI,YAAYK,YAAcD,C,CAGjC,SAASE,EAAoBF,GAC3BR,EAAKK,cAAcI,YAAcD,C,CAuCnC,SAASG,EAAIC,GACX,OAAO,IAAIC,SAAQC,IACjB,MAAMC,GAYaC,EAZQ,IAYHC,EAZS,KAa5BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADtD,IAAuBA,EAAKC,EAVxBI,YAAW,KACTP,EAAQ,C,MAAEF,E,KAAOG,GAAO,GACvBA,EAAK,G,CA3EZf,EAAKC,SAASqB,iBAAiB,SAE/B,WACEvB,GAAe,EACf,MAAMwB,EAAWzB,EAAO0B,IAAIb,GAE5BJ,EAAkB,IAClBG,EAAoB,6CAKGe,EAJPF,EAKhBV,QAAQa,KAAKD,GAASE,MAAK,EAACf,MAAEA,EAAKG,KAAEA,MACnCR,EAAkB,cAACK,qBAA4BG,eAmBnD,UAA4BH,MAAEA,EAAKG,KAAEA,EAAMa,YAAAC,IACzC,MAAMC,EAAK,WAAWD,aAAuBjB,aAAiBG,cAC9Df,EAAKM,UAAUyB,mBAAmB,YAAaD,E,CApBfE,CAAX,C,MAAEpB,E,KAAOG,E,YAAMhB,GAAc,IAIpD,SAAoB0B,GAClBZ,QAAQoB,IAAIR,GAASE,MAAK,KACxBjB,EAAoB,wCAAuE,G,CAZ7FwB,CAAWX,GAGb,IAAyBE,C","sources":["src/js/03-racetrack.js"],"sourcesContent":["const horses = [\n  'Secretariat',\n  'Eclipse',\n  'West Australian',\n  'Flying Fox',\n  'Seabiscuit',\n];\n\nlet raceCounter = 0;\n\nconst refs = {\n  startBtn: document.querySelector('.js-start-race'),\n  winnerField: document.querySelector('.js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tableBody: document.querySelector('.js-results-table > tbody'),\n};\n\nrefs.startBtn.addEventListener('click', onStart);\n\nfunction onStart() {\n  raceCounter += 1;\n  const promises = horses.map(run);\n\n  updateWinnerField('');\n  updateProgressField(' ü§ñ –ó–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!');\n  determineWinner(promises);\n  waitForAll(promises);\n}\n\nfunction determineWinner(horsesP) {\n  Promise.race(horsesP).then(({ horse, time }) => {\n    updateWinnerField(`üéâ –ü–æ–±–µ–¥–∏–ª ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${time}   –≤—Ä–µ–º–µ–Ω–∏`);\n    updateResultsTable({ horse, time, raceCounter });\n  });\n}\n\nfunction waitForAll(horsesP) {\n  Promise.all(horsesP).then(() => {\n    updateProgressField('üìù –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å—Ç–∞–≤–∫–∏.');\n  });\n}\n\nfunction updateWinnerField(message) {\n  refs.winnerField.textContent = message;\n}\n\nfunction updateProgressField(message) {\n  refs.progressField.textContent = message;\n}\n\nfunction updateResultsTable({ horse, time, raceCounter }) {\n  const tr = `<tr><td>${raceCounter}</td><td>${horse}</td><td>${time}</td></tr>`;\n  refs.tableBody.insertAdjacentHTML('beforeend', tr);\n}\n\n// console.log(\n//   '%c ü§ñ –ó–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!',\n//   'color: brown; font-size: 14px;'\n// );\n// console.log(\n//   `üéâ –ü–æ–±–µ–¥–∏–ª ${1}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${1}\n// //     –≤—Ä–µ–º–µ–Ω–∏`,\n//   'color: green; font-size: 14px;'\n// );\n// console.log(\n//   'üìù –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å—Ç–∞–≤–∫–∏.',\n//   'color: blue; font-size: 14px;'\n// );\n\n// const promises = horses.map(run);\n// console.log(promises);\n\n// Promise.race(promises).then(({ horse, time }) => {\n//   console.log(\n//     `%c üéâ –ü–æ–±–µ–¥–∏–ª ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${time}   –≤—Ä–µ–º–µ–Ω–∏`,\n//     'color: green; font-size: 14px;'\n//   );\n// });\n\n// Promise.all(promises).then(() => {\n//   console.log(\n//     '%c üìù –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å—Ç–∞–≤–∫–∏.',\n//     'color: blue; font-size: 14px;'\n//   );\n// });\n\nfunction run(horse) {\n  return new Promise(resolve => {\n    const time = getRandomTime(2000, 3500);\n\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\n// run('Mango')\n//   .then(x => console.log(x))\n//   .catch(e => console.log(e));\n\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// let raceCounter = 0;\n// const refs = {\n//   startBtn: document.querySelector('.js-start-race'),\n//   winnerField: document.querySelector('.js-winner'),\n//   progressField: document.querySelector('.js-progress'),\n//   tableBody: document.querySelector('.js-results-table > tbody'),\n// };\n\n// refs.startBtn.addEventListener('click', onStart);\n\n// function onStart() {\n//   raceCounter += 1;\n//   const promises = horses.map(run);\n\n//   updateWinnerField('');\n//   updateProgressField('ü§ñ –ó–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!');\n//   determineWinner(promises);\n//   waitForAll(promises);\n// }\n\n// function determineWinner(horsesP) {\n//   Promise.race(horsesP).then(({ horse, time }) => {\n//     updateWinnerField(`üéâ –ü–æ–±–µ–¥–∏–ª ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${time}\n//     –≤—Ä–µ–º–µ–Ω–∏`);\n//     updateResultsTable({ horse, time, raceCounter });\n//   });\n// }\n\n// function waitForAll(horsesP) {\n//   Promise.all(horsesP).then(() => {\n//     updateProgressField('üìù –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å—Ç–∞–≤–∫–∏.');\n//   });\n// }\n\n// function updateWinnerField(message) {\n//   refs.winnerField.textContent = message;\n// }\n\n// function updateProgressField(message) {\n//   refs.progressField.textContent = message;\n// }\n\n// function updateResultsTable({ horse, time, raceCounter }) {\n//   const tr = `<tr><td>${raceCounter}</td><td>${horse}</td><td>${time}</td></tr>`;\n//   refs.tableBody.insertAdjacentHTML('beforeend', tr);\n// }\n\n// /*\n//  * Promise.race([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–∏–≤—à–µ–≥–æ—Å—è –ø—Ä–æ–º–∏—Å–∞\n//  */\n\n// /*\n//  * Promise.all([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤\n//  */\n\n// function run(horse) {\n//   return new Promise(resolve => {\n//     const time = getRandomTime(2000, 3500);\n\n//     setTimeout(() => {\n//       resolve({ horse, time });\n//     }, time);\n//   });\n// }\n\n// function getRandomTime(min, max) {\n//   return Math.floor(Math.random() * (max - min + 1) + min);\n// }\n"],"names":["$11eeaef6d80d5c5b$var$horses","$11eeaef6d80d5c5b$var$raceCounter","$11eeaef6d80d5c5b$var$refs","startBtn","document","querySelector","winnerField","progressField","tableBody","$11eeaef6d80d5c5b$var$updateWinnerField","message","textContent","$11eeaef6d80d5c5b$var$updateProgressField","$11eeaef6d80d5c5b$var$run","horse","Promise","resolve","time","min","max","Math","floor","random","setTimeout","addEventListener","promises","map","horsesP","race","then","raceCounter","raceCounter1","tr","insertAdjacentHTML","$11eeaef6d80d5c5b$var$updateResultsTable","all","$11eeaef6d80d5c5b$var$waitForAll"],"version":3,"file":"03-racetrack.35ff4d3c.js.map"}